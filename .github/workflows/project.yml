name: WCG from docker

on: 
  push:
  workflow_dispatch: 

env:
  IMAGE_NAME: "wcg"
  REGISTRY: "ghcr.io"
  HELM_REPO: "12-helm"
  CHART_NAME: "wcg"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Test
        run: ls -la

      - name: Set lower case owner name
        run: echo IMAGE_REPOSITORY=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - uses: actions/checkout@v2
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Create a GitHub release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: ${{ env.IMAGE_NAME }} ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
      
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.ACTION_TOKEN }}
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker buildx create --use && docker buildx build -t ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:latest -t ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ steps.tag_version.outputs.new_tag }} -f Dockerfile . --push
                                                             # -t ${{ env.REGISTRY }}/${{ env.IMAGE_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
  
      - name: Helm lint
        run: helm lint ${{ env.HELM_REPO }}

      - name: Modify Chart
        run: |
          sed -i 's/version: 0.0.3/version: ${{ steps.tag_version.outputs.new_tag }}/g' ${{ env.HELM_REPO }}/Chart.yaml
    
      - name: Package Helm chart
        run: helm package ${{ env.HELM_REPO }} -d ${{ env.HELM_REPO }}

      # - name: Update Helm repository index
      #   run: helm repo index ${{ env.HELM_REPO }} --url https://github.com/ViinSent/viinsent.github.io.git

      # - name: Deploy Helm chart with Argo CD
      #   run: |
      #     argocd login <ARGOCD_SERVER> --username <USERNAME> --password <PASSWORD>
      #     argocd app create <APP_NAME> --repo <HELM_REPO_URL> --path <CHART_PATH> --dest-namespace <NAMESPACE> --dest-server https://kubernetes.default.svc --sync-policy auto
      #     argocd app set <APP_NAME> --values path/to/values.yaml
      #     argocd app sync <APP_NAME>
      #   env:
      #     ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
      #     USERNAME: ${{ secrets.ARGOCD_USERNAME }}
      #     PASSWORD: ${{ secrets.ARGOCD_PASSWORD }}
      #     APP_NAME: your-app-name
      #     HELM_REPO_URL: https://your-helm-repo-url.com
      #     CHART_PATH: path/to/your/chart
      #     NAMESPACE: your-namespace
