Vagrant.configure("2") do |config|

  # Синхронизация папок
  config.vm.synced_folder  ".", "/vagrant", disabled: false

  # Виртуальная машина для HTML-сервера
  config.vm.define "html_vm" do |html|
    html.vm.box = "generic/debian11"
    html.vm.provider "virtualbox" do |vb|
      vb.memory = 512
    end

    html.vm.network "private_network", ip: "192.168.33.10"

    html.vm.provision "shell", inline: <<-SHELL
       apt-get update
       apt-get install -y mc ansible sshpass
    SHELL

    html.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "html.yaml"
      ansible.limit = "all"
      ansible.become = true
    end
  end

  # Виртуальная машина для PHP-сервера
  config.vm.define "php_vm" do |php|
    php.vm.box = "generic/debian11"
    php.vm.provider "virtualbox" do |vb|
      vb.memory = 512
    end

    php.vm.network "private_network", ip: "192.168.33.12"
    php.vm.provision "shell", inline: <<-SHELL
       apt-get update
       apt-get install -y mc ansible sshpass
    SHELL

    php.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "php.yaml"
      ansible.limit = "all"
      ansible.become = true
    end
  end

  # Конфигурация машины с Nginx в качестве reverse proxy
  config.vm.define "nginx" do |nginx|
    nginx.vm.box = "generic/debian11"
    nginx.vm.provider "virtualbox" do |vb|
      vb.memory = 512
    end

    nginx.vm.network "private_network", ip: "192.168.33.16"
    nginx.vm.provision :file, source: '.vagrant/machines/html_vm/virtualbox/private_key', destination: '/home/vagrant/private_key_html_vm'
    nginx.vm.provision :file, source: '.vagrant/machines/php_vm/virtualbox/private_key', destination: '/home/vagrant/private_key_php_vm'
    nginx.vm.provision "shell", inline: <<-SHELL
       apt-get update
       apt-get install -y mc ansible sshpass
    SHELL

    nginx.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "nginx.yaml"
      ansible.limit = "all"
    end
  end
end
