Vagrant.configure("2") do |config|
  config.vm.box = "generic/centos8s"
  config.vm.provider "virtualbox" do |vb|
    vb.memory = 512
    vb.cpus   = 1
  end
  # Синхронизация папок
  config.vm.synced_folder  ".", "/vagrant", disabled: false

  # Виртуальная машина для master-сервера
  config.vm.define "master.puppet", primary: true do |master|
    master.vm.network "private_network", ip: "192.168.50.10"
    master.vm.hostname = "master.puppet"
    master.vm.provider("virtualbox") { |vb| vb.memory = 1024 }

    master.vm.provision "shell", inline: <<-SHELL
       rpm -Uvh https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
    SHELL

    master.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "playbook.yaml"
      ansible.limit = "all"
      ansible.become = true
    end
  end

  # Виртуальная машина для slave1-сервера
  config.vm.define "slave1.puppet" do |slave|
    slave.vm.network "private_network", ip: "192.168.50.20"
    slave.vm.hostname = "slave1.puppet"
    slave.vm.provision "shell", inline: <<-SHELL
       rpm -Uvh https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
    SHELL

#        yum update
#        yum install -y ansible

    slave.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "playbook.yaml"
      ansible.limit = "all"
      ansible.become = true
    end
  end

  # Виртуальная машина для slave2-сервера
  config.vm.define "slave2.puppet" do |slave|
    slave.vm.network "private_network", ip: "192.168.50.30"
    slave.vm.hostname = "slave2.puppet"
    slave.vm.provision "shell", inline: <<-SHELL
       rpm -Uvh https://yum.puppet.com/puppet7-release-el-8.noarch.rpm
    SHELL

    slave.vm.provision "ansible_local" do |ansible|
      ansible.inventory_path = "inventory"
      ansible.compatibility_mode = "2.0"
      ansible.playbook = "playbook.yaml"
      ansible.limit = "all"
    end
  end
end

